function Int32.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push argument 1
pop this 0
push pointer 0
return
function Int32.initialize 0
push constant 0
push constant 0
call Int32.new 2
pop static 0
push constant 0
push constant 0
call Int32.new 2
pop static 1
push constant 0
return
function Int32.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Int32.getUpper 0
push argument 0
pop pointer 0
push this 1
return
function Int32.getLower 0
push argument 0
pop pointer 0
push this 0
return
function Int32.set 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push argument 2
pop this 0
push constant 0
return
function Int32.upperToLowerWithSignExtend 0
push argument 0
pop pointer 0
push this 1
pop this 0
push this 0
push constant 0
lt
pop this 1
push constant 0
return
function Int32.setLowerWithSignExtend 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push this 0
push constant 0
lt
pop this 1
push constant 0
return
function Int32.add 4
push argument 0
pop pointer 0
push this 1
push constant 1
push argument 1
add
pop pointer 1
push that 0
add
pop this 1
push constant 0
push argument 1
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 0
lt
pop local 2
push this 0
push constant 0
lt
pop local 1
push this 0
push local 0
add
pop this 0
push this 0
push constant 0
lt
pop local 3
push this 1
push local 1
push local 2
and
push constant 0
lt
push local 1
push local 2
eq
not
push local 3
push constant 0
eq
and
or
sub
pop this 1
push constant 0
return
function Int32.double 0
push argument 0
pop pointer 0
push this 1
push this 1
add
push this 0
push constant 0
lt
sub
pop this 1
push this 0
push this 0
add
pop this 0
push constant 0
return
function Int32.negate 0
push argument 0
pop pointer 0
push this 1
not
push this 0
push constant 0
eq
sub
pop this 1
push this 0
not
push constant 1
add
pop this 0
push constant 0
return
function Int32.subtract 0
push argument 0
pop pointer 0
push constant 1
push static 0
add
push constant 1
push argument 1
add
pop pointer 1
push that 0
not
push constant 0
push argument 1
add
pop pointer 1
push that 0
push constant 0
eq
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 0
add
push constant 0
push argument 1
add
pop pointer 1
push that 0
not
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push static 0
call Int32.add 2
pop temp 0
push constant 0
return
function Int32.shiftLeft 0
push argument 0
pop pointer 0
label WHILE_EXP0
push argument 1
push constant 0
gt
not
if-goto WHILE_END0
push pointer 0
call Int32.double 1
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Int32.print 0
push argument 0
pop pointer 0
push constant 7
call String.new 1
push constant 117
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 9
call String.new 1
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Int32.multiplyInt 1
push argument 0
pop pointer 0
push constant 1
pop local 0
push static 0
push this 1
push this 0
call Int32.set 3
pop temp 0
push constant 0
pop this 1
push constant 0
pop this 0
label WHILE_EXP0
push argument 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push argument 1
and
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push static 0
call Int32.add 2
pop temp 0
push argument 1
push local 0
sub
pop argument 1
label IF_FALSE0
push static 0
call Int32.double 1
pop temp 0
push local 0
push local 0
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Int32.testAnd 0
push argument 0
pop pointer 0
push this 1
push constant 1
push argument 1
add
pop pointer 1
push that 0
and
push this 0
push constant 0
push argument 1
add
pop pointer 1
push that 0
and
or
push constant 0
eq
not
return
function Int32.multiply 1
push argument 0
pop pointer 0
push constant 32
pop local 0
push static 0
push this 1
push this 0
call Int32.set 3
pop temp 0
push static 1
push constant 0
push constant 1
call Int32.set 3
pop temp 0
push constant 0
pop this 1
push constant 0
pop this 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push static 1
push argument 1
call Int32.testAnd 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push static 0
call Int32.add 2
pop temp 0
label IF_FALSE0
push static 0
call Int32.double 1
pop temp 0
push static 1
call Int32.double 1
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Int32.divide 1
push argument 0
pop pointer 0
push constant 32767
push argument 1
call Math.divide 2
push constant 2
call Math.multiply 2
pop local 0
push static 1
push constant 0
push this 1
call Int32.set 3
pop temp 0
push static 1
push local 0
call Int32.multiplyInt 2
pop temp 0
push constant 0
pop this 1
push pointer 0
push local 0
call Int32.multiplyInt 2
pop temp 0
push this 1
pop this 0
push constant 0
pop this 1
push pointer 0
push static 1
call Int32.add 2
pop temp 0
push constant 0
return
