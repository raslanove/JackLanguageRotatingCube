function Int32.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 0
pop this 2
push constant 0
pop this 3
push pointer 0
return
function Int32.dispose 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Int32.dispose 1
pop temp 0
label IF_FALSE0
push this 3
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
call Int32.dispose 1
pop temp 0
label IF_FALSE1
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Int32.getUpper 0
push argument 0
pop pointer 0
push this 0
return
function Int32.getLower 0
push argument 0
pop pointer 0
push this 1
return
function Int32.set 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
return
function Int32.add 5
push argument 0
pop pointer 0
push this 0
push argument 1
call Int32.getUpper 1
add
pop this 0
push argument 1
call Int32.getLower 1
pop local 1
push this 1
push local 1
add
pop local 0
push this 1
push constant 32767
push constant 1
add
and
pop local 2
push local 1
push constant 32767
push constant 1
add
and
pop local 3
push local 0
push constant 32767
push constant 1
add
and
pop local 4
push local 2
push constant 0
eq
not
push local 3
push constant 0
eq
not
and
push local 2
push local 3
eq
not
push local 4
push constant 0
eq
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 1
add
pop this 0
label IF_FALSE0
push local 0
pop this 1
push constant 0
return
function Int32.subtract 2
push argument 0
pop pointer 0
push argument 1
call Int32.getUpper 1
pop local 0
push argument 1
call Int32.getLower 1
pop local 1
push this 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
not
push local 1
not
call Int32.new 2
pop this 2
goto IF_END0
label IF_FALSE0
push this 2
push local 0
not
push local 1
not
call Int32.set 3
pop temp 0
label IF_END0
push this 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push constant 1
call Int32.new 2
pop this 3
goto IF_END1
label IF_FALSE1
push this 3
push constant 0
push constant 1
call Int32.set 3
pop temp 0
label IF_END1
push this 2
push this 3
call Int32.add 2
pop temp 0
push pointer 0
push this 2
call Int32.add 2
pop temp 0
push constant 0
return
function Int32.shiftLeft 0
push argument 0
pop pointer 0
label WHILE_EXP0
push argument 1
push constant 0
gt
not
if-goto WHILE_END0
push pointer 0
push pointer 0
call Int32.add 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Int32.print 0
push argument 0
pop pointer 0
push constant 7
call String.new 1
push constant 117
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 9
call String.new 1
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Int32.multiply 2
push argument 0
pop pointer 0
push constant 16
pop local 0
push constant 1
pop local 1
push this 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 1
call Int32.new 2
pop this 2
goto IF_END0
label IF_FALSE0
push this 2
push this 0
push this 1
call Int32.set 3
pop temp 0
label IF_END0
push constant 0
pop this 0
push constant 0
pop this 1
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 1
push argument 1
and
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 2
call Int32.add 2
pop temp 0
label IF_FALSE1
push this 2
push constant 1
call Int32.shiftLeft 2
pop temp 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Int32.divide 1
push argument 0
pop pointer 0
push constant 32767
push argument 1
call Math.divide 2
push constant 2
call Math.multiply 2
pop local 0
push this 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push this 0
call Int32.new 2
pop this 3
goto IF_END0
label IF_FALSE0
push this 3
push constant 0
push this 0
call Int32.set 3
pop temp 0
label IF_END0
push this 3
push local 0
call Int32.multiply 2
pop temp 0
push constant 0
pop this 0
push pointer 0
push local 0
call Int32.multiply 2
pop temp 0
push this 0
pop this 1
push constant 0
pop this 0
push pointer 0
push this 3
call Int32.add 2
pop temp 0
push constant 0
return
