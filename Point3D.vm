function Point3D.initialize 0
push constant 0
push constant 0
call Int32.new 2
pop static 0
push constant 0
push constant 0
call Int32.new 2
pop static 1
push constant 0
return
function Point3D.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 0
pop this 6
push argument 1
pop this 7
push argument 0
push constant 0
call Int32.new 2
pop this 3
push argument 1
push constant 0
call Int32.new 2
pop this 4
push argument 2
push constant 0
call Int32.new 2
pop this 5
push pointer 0
return
function Point3D.dispose 0
push argument 0
pop pointer 0
push this 3
call Int32.dispose 1
pop temp 0
push this 4
call Int32.dispose 1
pop temp 0
push this 5
call Int32.dispose 1
pop temp 0
push constant 0
return
function Point3D.resetToInitial 0
push argument 0
pop pointer 0
push this 3
push this 0
push constant 0
call Int32.set 3
pop temp 0
push this 4
push this 1
push constant 0
call Int32.set 3
pop temp 0
push this 5
push this 2
push constant 0
call Int32.set 3
pop temp 0
push constant 0
return
function Point3D.backUpCoordinates 0
push argument 0
pop pointer 0
push this 3
call Int32.getUpper 1
pop this 6
push this 4
call Int32.getUpper 1
pop this 7
push constant 0
return
function Point3D.getX 0
push argument 0
pop pointer 0
push this 3
call Int32.getUpper 1
return
function Point3D.getY 0
push argument 0
pop pointer 0
push this 4
call Int32.getUpper 1
return
function Point3D.getZ 0
push argument 0
pop pointer 0
push this 5
call Int32.getUpper 1
return
function Point3D.yaw 6
push argument 0
pop pointer 0
label WHILE_EXP0
push argument 1
push constant 359
gt
not
if-goto WHILE_END0
push argument 1
push constant 360
sub
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push argument 1
pop local 0
label WHILE_EXP1
push local 0
push constant 89
gt
not
if-goto WHILE_END1
push local 0
push constant 90
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
push argument 1
push constant 269
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 90
push local 0
sub
pop local 1
push constant 90
push local 0
sub
pop local 2
push constant 0
pop local 3
push constant 0
not
pop local 4
goto IF_END0
label IF_FALSE0
push argument 1
push constant 179
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
pop local 1
push local 0
pop local 2
push constant 0
not
pop local 3
push constant 0
not
pop local 4
goto IF_END1
label IF_FALSE1
push argument 1
push constant 89
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 90
push local 0
sub
pop local 1
push constant 90
push local 0
sub
pop local 2
push constant 0
not
pop local 3
push constant 0
pop local 4
goto IF_END2
label IF_FALSE2
push local 0
pop local 1
push local 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
label IF_END2
label IF_END1
label IF_END0
push local 1
push static 0
call MathF.cos 2
pop temp 0
push local 2
push static 1
call MathF.sin 2
pop temp 0
push this 3
call Int32.getUpper 1
pop local 5
push this 3
push constant 0
push local 5
call Int32.set 3
pop temp 0
push this 3
push static 0
call Int32.getLower 1
call Int32.multiplyInt 2
pop temp 0
push this 4
push constant 0
push local 5
call Int32.set 3
pop temp 0
push this 4
push static 1
call Int32.getLower 1
call Int32.multiplyInt 2
pop temp 0
push local 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
call Int32.negate 1
pop temp 0
label IF_FALSE3
push local 4
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 4
call Int32.negate 1
pop temp 0
label IF_FALSE4
push constant 0
return
